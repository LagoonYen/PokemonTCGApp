@page
@model PokemonTCGApp.Pages.BMS.setlistModel
@{
    Layout = "_Layout_BMS";
}
<script src="https://rawgit.com/ratiw/vuetable-2/develop/dist/vuetable-2.js"></script>

<style>
    .elUploadShow .el-upload--picture-card{
        width:150px;
        height:150px;
        line-height:150px;
    }
    .elUploadHide .el-upload--picture-card{
        display:none;
    }

    .setLogo{
        max-width:150px;
        max-height:150px;
    }

    input.el-upload__input {
        display: none;
    }
</style>

<div class="content-wrapper" id="app">

    <section class="content-header">
        <h1>卡牌列表
            <small>所有已存在Mongo內的卡牌系列列表</small>
        </h1>
    </section>

    <section class="content">
        <div class="box box-primary">

            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-newspaper-o"></i>新增卡牌系列</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>
           
            <div class="box-body">
                <div class="form-horizontal">
                    @*左半邊*@
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="lbl-seriesId" class="col-md-2 control-label">系列ID</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-seriesId" placeholder="系列ID" v-model="seriesId" />
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="lbl-series" class="col-md-2 control-label">主標題名稱</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-series" placeholder="主標題名稱" v-model="series" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="lbl-name" class="col-md-2 control-label">副標題名稱</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-name" placeholder="副標題名稱" v-model="name"/>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="lbl-purchaserName" class="col-md-2 control-label">上市日期</label>
                            <div class="col-md-5">
                                <div class="input-group">
                                    <el-date-picker 
                                        v-model="releasetime"
                                        value-format="yyyy-MM-dd HH:mm:ss"
                                        type="date"
                                        placeholder="上市日期"
                                        align="right">
                                    </el-date-picker>
                                </div>
                            </div>
                        </div>

                    </div>
                    @*右半邊*@
                    <div class="col-md-6">
                        <div class="form-group">
                            @*上傳圖片*@
                            <el-upload
                                ref="elupload"
                                action="#"
                                :class="{elUploadShow:showUpload, elUploadHide:hideUpload}"
                                list-type="picture-card"
                                :auto-upload="false"
                                :on-change="handleChange"
                                :file-list="fileList"
                                :before-upload="beforeAvatarUpload"
                                >
                                @*縮圖放大*@
                                <i slot="default" class="el-icon-plus"></i>
                                <div slot="file" slot-scope="{file}">
                                    <img
                                        class="el-upload-list__item-thumbnail"
                                        :src="file.url" alt="">
                                    <span class="el-upload-list__item-actions">
                                        <span
                                            class="el-upload-list__item-preview"
                                            v-on:click="handlePictureCardPreview(file)">
                                            <i class="el-icon-zoom-in"></i>
                                        </span>
                                        <span
                                            v-if="!disabled"
                                            class="el-upload-list__item-delete"
                                            v-on:click="handleRemove(file)">
                                            <i class="el-icon-delete"></i>
                                        </span>
                                    </span>
                                </div>
                            </el-upload>
                            <el-dialog :visible.sync="dialogVisible">
                                <img style="width:100%" :src="dialogImageUrl" alt="">
                            </el-dialog>
                              

                        </div>
                    </div>


                    @*搜索條件*@

                </div>
            </div>

            <div class="box-footer">
                <button type="button" class="btn btn-danger" v-on:click="UpsertSet">UpSert</button>
            </div>
        </div>

        <div class="box box-primary">
            <div id="content" class="ui basic segment">
                <div class="ui grid">

                    <div class="ui left aligned nine wide column">
                        <div class="box-header with-border">
                            <h3 class="box-title"><i class="fa fa-fw fa-list"></i>系列列表<span></span></h3>
                        </div>
                    </div>

                    <div class="ui right aligned seven wide column">
                        <button class="ui basic button" id="settingsBtn">
                            <i class="setting icon"></i>
                            顯示設定
                        </button>
                    </div>

                </div>

                <div v-loading="tableLoading">
                    <vuetable ref="vuetable"
                        :api-url="apiUrl"
                        :fields="fields"
                        :per-page="perPage"
                        pagination-path="pagination"
                        data-path="mydata"
                        :append-params="moreParams"
                        class="table table-bordered"
                        http-method="post"
                        v-on:vuetable:pagination-data="onPaginationData"
                        v-on:vuetable:loading="tableLoading = true"
                        v-on:vuetable:loaded="tableLoading = false"
                        v-on:vuetable:cell-clicked="onCellClicked"
                        track-by="Id"
                        detail-row-component="my-detail-row"
                        >

                        @*:pagination-component="paginationComponent"*@
                        <template slot="actions" slot-scope="props">
                            <div class="table-button-container">
                                <a v-on:click="editSet(props.rowData)" class="btn-xs btn-default btn">編輯</a>
                                <a v-on:click="delSet(props.rowData)" class="btn-xs btn-default btn">刪除</a>
                            </div>
                        </template>

                    </vuetable>

                    <vuetable-pagination ref="pagination" v-on:vuetable-pagination:change-page="onChangePage"></vuetable-pagination>

                </div>
            </div>
        </div>
    </section>
</div>

<script>
    Vue.use(Vuetable);

    var tableColumns = [
        {
            name: 'Id',
            sortField: 'Id',
            title: "MongoID",
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '20%'
        },
        {
            name: 'SeriesId',
            sortField: 'SeriesId',
            title: '系列ID',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'Series',
            sortField: 'Series',
            title: '主標題名稱',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'Name',
            sortField: 'Name',
            title: '副標題名稱',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'Imgbase64',
            sortField: 'Imgbase64',
            title: '縮圖',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            callback:'formatImage',
            width: '15%'
        },
        {
            name: 'ReleaseTime',
            sortField: 'ReleaseTime',
            title: '上市時間',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            callback:'formatDate',
            width: '15%'
        },
        {
            name: 'UpdateAdmin',
            sortField: 'UpdateAdmin',
            title: '最後修改人',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: '__slot:actions',
            title: "操作",
            titleClass: 'center aligned',
            dataClass: 'custom-action center aligned',
            width: '10%'
        }
    ];

    Vue.component('my-detail-row', {
        template: [
            '<div class="detail-row ui form" v-on:click="onClick($event)">'+
                '<div class="">'+
                    '<label>系列ID：</label>'+
                    '<span>{{rowData.SeriesId}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>副標題名稱：</label>'+
                    '<span>{{rowData.Name}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>主標題名稱：</label>'+
                    '<span>{{rowData.Series}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>上市時間：</label>'+
                    '<span>{{rowData.ReleaseTime}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>最後更新時間：</label>'+
                    '<span>{{rowData.UpdateTime}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>最後修改人：</label>'+
                    '<span>{{rowData.UpdateAdmin}}</span>'+
                '</div>'+
            '</div>'
        ].join(''),
        props: {
            rowData: {
                type: Object,
                required: true
            }
        },
        methods: {
            CheckDetail (event) {
                console.log('my-detail-row: on-click')
            }
        }
    })

    var appMain = new Vue({
        el: '#app',
        components: {
            'vuetable-pagination': Vuetable.VuetablePagination
        },
        data: function () {
            return {
                //el-upload 相關係數
                showUpload:true,
                hideUpload:false,
                limitCountImg : 1,
                dialogImageUrl: '',
                dialogVisible: false,
                disabled: false,
                fileList:[],

                //formData相關係數
                formData : new FormData(),
                id:"",
                seriesId:"",
                name:"",
                series:"",
                releasetime : new Date(),
                createTime:"",
                imageURL:"",

                searchFor: '',
                tableLoading: true,
                fields: tableColumns,
                apiUrl: "/api/Card/GetSets",
                perPage: 10,
                moreParams: {
                    filterQuery: { Id : "" },
                    Keyword: ''
                },
                CleanerData: {
                    "Id": null,
                },
                formLabelWidth: '160px',
            }
        },
        mounted: function () {
            $("#app").show();
            //var paras = getUrlAllParams();
        },
        methods: {
            //el-upload部分
            handleChange(file, fileList) {
                //修改el-upload style
                this.hideUpload = fileList.length >= this.limitCountImg

                this.getBase64(file.raw).then(data => {
                    appMain.imageURL = data
                })
            },
            handleRemove(file) {
                let fileList = this.$refs.elupload.uploadFiles;
                let index = fileList.findIndex( fileItem => {
                    return fileItem.uid === file.uid
                })
                fileList.splice(index, 1)

                this.hideUpload = fileList.length >= this.limitCountImg
                this.imageURL = null
            },
            handlePictureCardPreview(file) {
                this.dialogImageUrl = file.url;
                this.dialogVisible = true;
            },
            beforeAvatarUpload (file) {
                const isJPG = file.type === 'image/jpeg'
                const isLt2M = file.size / 1024 / 1024 < 2
                if (!isJPG) {
                    this.$message.error('格式錯誤!')
                }
                if (!isLt2M) {
                    this.$message.error('圖片不能大於 2MB!')
                }
                return isJPG && isLt2M
            },
            getBase64(data){
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        resolve(e.target.result);
                    };
                    reader.readAsDataURL(data);
                    reader.onerror = () => {
                        reject(new Error("文件異常"));
                    }
                })
            },

            //vuetable顯示
            showLoader: function () {
                this.$loading();
            },
            hideLoader: function () {
                this.$loading().close();
            },
            formatDate: function (value) {
                if (value == null) return '';
                return moment(value.replace("T", " ")).local().format('YYYY/MM/DD');
            },
            formatImage: function (value) {
                if (value == null) return '';
                return `<img class="setLogo" src=${value} />`
            },
            transform: function (data) {
                var transformed = {}
                transformed.pagination = {
                    total: data.total,
                    per_page: data.per_page,
                    current_page: data.current_page,
                    last_page: data.last_page,
                    from: data.from,
                    to: data.to
                }

                transformed.mydata = data.data;
                return transformed;
            },
            setFilter: function () {
                this.$nextTick(function () {
                    this.$refs.vuetable.refresh();
                });
            },
            resetFilter: function () {
                this.searchFor = '';
                this.setFilter();
            },
            onPaginationData: function (paginationData) {
                if (paginationData.total <= 0) {
                    this.searchZero();
                    this.$refs.pagination.setPaginationData(paginationData);
                }
                else {
                    this.$refs.pagination.setPaginationData(paginationData);
                }
            },
            onChangePage: function (page) {
                this.$refs.vuetable.changePage(page);
            },
            startRow: function (model) {
                model.Password = "";
                this.CleanerData = model;
                this.dialogFormVisible = true;
                this.diagleType = true;
            },
            changePaginationComponent: function() {
                this.$broadcast('vuetable:load-success', this.$refs.vuetable.tablePagination)
            },
            downloadFile() {
                //this.$confirm('確定要匯出嗎？', '', { type: 'warning' })
                //    .then(() => {
                //        let url = `/CgpManager/v1/DownloadUserList`;
                //        let data = {
                //            "params": {
                //                "sort": "",
                //                "page": 0,
                //                "per_page": 0,
                //                "filterQuery": appMain.moreParams.filterQuery
                //            }
                //        };
                //        fetch(url, {
                //            headers: { 'content-type': 'application/json' },
                //            method: 'post',
                //            body: JSON.stringify(data),
                //        })
                //        .then(response => response.blob())
                //        .then(function (myBlob) {
                //            var objectURL = URL.createObjectURL(myBlob);
                                
                //            var fileLink = document.createElement('a');
                //            fileLink.href = objectURL;

                //            //用於取名
                //            var today = new Date();
                //            fileLink.download = (appMain.moreParams.filterQuery.OrderDateRange != null && appMain.moreParams.filterQuery.OrderDateRange != "") ?
                //                `${appMain.moreParams.filterQuery.OrderDateRange[0].split(' ')[0]}to${appMain.moreParams.filterQuery.OrderDateRange[1].split(' ')[0]}`
                //                : `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;

                //            fileLink.click();
                //        });
                //    }).catch(() => {

                //    });
            },
            
            //新增/修改新系列API 傳送可能包含空Id 空createtime
            UpsertSet() {
                let url = "/api/Card/UpsertSet";
                let formData = {
                    'Id': appMain.id,
                    'SeriesId':appMain.seriesId,
                    'Name':appMain.name,
                    'Series':appMain.series,
                    'CreateTime':appMain.createTime != "" ? 
                        appMain.createTime : dayjs().format(),
                    'ReleaseTime': moment(appMain.releasetime).format(),
                    'File':appMain.imageURL,
                }

                fetch(url, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                }).then((response) => {
                    (response.status === 200) ? 
                        appMain.$notify({ title: '成功', message : "新增成功", type: 'success' }) 
                        :appMain.$notify({ title: '失敗', message : "缺少必要項目", type: 'error' });
                    
                    return response;
                }).then((data) => {
                    appMain.cleanData();
                    appMain.$refs.vuetable.refresh();
                }).catch((err) => {
                    appMain.$notify({ title: '失敗', message : "response.status : " + response.status, type: 'error' });
                });
            },
            cleanData(){
                appMain.id = "";
                appMain.seriesId = "";
                appMain.name = "";
                appMain.series = "";
                appMain.releasetime = new Date();
                appMain.createTime = "";

                let fileList = this.$refs.elupload.uploadFiles;
                if(fileList.length > 0){
                    fileList.splice(0, 1)
                }

                this.hideUpload = fileList.length >= this.limitCountImg
                this.imageURL = null
            }, 

            //vuetable 操作
            searchZero() {
                this.$alert('請重新檢視篩選條件', '搜尋結果為0', {
                    confirmButtonText: '確定'
                });
            },
            onCellClicked (data, field, event) {
                console.log('cellClicked: ', field.name)
                this.$refs.vuetable.toggleDetailRow(data.Id)
            },
            editSet: function (data) {
                appMain.id = data.Id;
                appMain.seriesId = data.SeriesId;
                appMain.name = data.Name;
                appMain.series = data.Series;
                appMain.releasetime = new Date(data.ReleaseTime);
                appMain.createTime = new Date(data.CreateTime);
                //appMain.imageURL = data.Imgbase64;
                //appMain.fileList.push(data.Imgbase64);
            },
            delSet: function (data) {
                this.$confirm('確認是否刪除?', '注意', {
                    confirmButtonText: '確認',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    let url = "/api/Card/DeleteSet?id=" + data.Id;
                    
                    console.log(url)
                    fetch(url, {
                        method: "DELETE",
                    }).then(function (data) {
                        appMain.$notify({ title: '成功', message: '成功', type: 'success' });
                        appMain.$refs.vuetable.refresh();
                    }).catch(function (data) {

                    });
                }).catch(() => {

                });
            },
        },
    });

</script>
