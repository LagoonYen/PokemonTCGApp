@page
@model PokemonTCGApp.Pages.BMS.setlistModel
@{
    Layout = "_Layout_BMS";
}
<script src="https://rawgit.com/ratiw/vuetable-2/develop/dist/vuetable-2.js"></script>

<style>
    .elUploadShow .el-upload--picture-card{
        width:150px;
        height:150px;
        line-height:150px;
    }
    .elUploadHide .el-upload--picture-card{
        display:none;
    }

    /*Need Desc*/
    /*.el-upload__input {
        display: none !important;
    }*/

    input.el-upload__input {
        display: none;
    }
</style>

<div class="content-wrapper" id="app">

    <section class="content-header">
        <h1>卡牌列表
            <small>所有已存在Mongo內的卡牌系列列表</small>
        </h1>
    </section>

    <section class="content">
        <div class="box box-primary">

            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-newspaper-o"></i>新增卡牌系列</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>
            @*style="min-height: 1140px;*@
            <div class="box-body">
                <div class="form-horizontal">
                    @*左半邊*@
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="lbl-seriesId" class="col-md-2 control-label">系列ID</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-seriesId" placeholder="系列ID" v-model="seriesId" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="lbl-series" class="col-md-2 control-label">主標題名稱</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-series" placeholder="主標題名稱" v-model="series" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="lbl-name" class="col-md-2 control-label">副標題名稱</label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="lbl-name" placeholder="副標題名稱" v-model="name"/>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="lbl-purchaserName" class="col-md-2 control-label">上市日期</label>
                            <div class="col-md-5">
                                <div class="input-group">
                                    <el-date-picker 
                                        v-model="releasetime"
                                        value-format="yyyy-MM-dd HH:mm:ss"
                                        type="date"
                                        placeholder="上市日期"
                                        align="right">
                                    </el-date-picker>
                                </div>
                            </div>
                        </div>

                    </div>
                    @*右半邊*@
                    <div class="col-md-6">
                        <div class="form-group">

                            <el-upload
                                ref="elupload"
                                action="#"
                                :class="{elUploadShow:showUpload, elUploadHide:hideUpload}"
                                list-type="picture-card"
                                :auto-upload="false"
                                :on-change="handleChange"
                                >
                                @*:file-list="fileList"*@
                                @*<i class="el-icon-upload"></i>*@

                                <i slot="default" class="el-icon-plus"></i>
                                @*<div class="el-upload__text">拖曳至此或<em>點這裡</em></div>*@
                                <div slot="file" slot-scope="{file}">
                                    <img
                                        class="el-upload-list__item-thumbnail"
                                        :src="file.url" alt="">
                                    <span class="el-upload-list__item-actions">
                                        <span
                                            class="el-upload-list__item-preview"
                                            v-on:click="handlePictureCardPreview(file)">
                                            <i class="el-icon-zoom-in"></i>
                                        </span>
                                        <span
                                            v-if="!disabled"
                                            class="el-upload-list__item-delete"
                                            v-on:click="handleRemove(file)">
                                            <i class="el-icon-delete"></i>
                                        </span>
                                    </span>
                                </div>
                            </el-upload>
                            <el-dialog :visible.sync="dialogVisible">
                                <img style="width:100%" :src="dialogImageUrl" alt="">
                            </el-dialog>
                              

                        </div>
                    </div>


                    @*搜索條件*@

                </div>
            </div>

            <div class="box-footer">
                @*<button type="button" class="btn btn-primary " v-on:click="setFilter">搜尋</button>*@
                @*<button type="button" class="btn btn-warning" v-on:click="downloadFile">下載</button>*@
                <button type="button" class="btn btn-danger" v-on:click="addNewSet">新增</button>
            </div>
        </div>

        <div class="box box-primary">
            <div id="content" class="ui basic segment">
                <div class="ui grid">

                    <div class="ui left aligned nine wide column">
                        <div class="box-header with-border">
                            <h3 class="box-title"><i class="fa fa-fw fa-list"></i>系列列表<span></span></h3>
                        </div>
                    </div>

                    <div class="ui right aligned seven wide column">
                        <button class="ui basic button" id="settingsBtn">
                            <i class="setting icon"></i>
                            顯示設定
                        </button>
                    </div>

                </div>
                @*<div class="ui grid">
                    <div class="ui left aligned nine wide column">
                        <label for="lbl-keyword" class="col-md-2 control-label">關鍵字</label>
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="lbl-keyword" placeholder="關鍵字" v-model="moreParams.filterQuery.Id" />
                        </div>
                    </div>
                </div>*@

                <div v-loading="tableLoading">
                    <vuetable ref="vuetable"
                        :api-url="apiUrl"
                        :fields="fields"
                        :per-page="perPage"
                        pagination-path="pagination"
                        data-path="mydata"
                        :append-params="moreParams"
                        class="table table-bordered"
                        http-method="post"
                        v-on:vuetable:pagination-data="onPaginationData"
                        v-on:vuetable:loading="tableLoading = true"
                        v-on:vuetable:loaded="tableLoading = false"
                        v-on:vuetable:cell-clicked="onCellClicked"
                        detail-row-component="my-detail-row"
                        >
                        @*:pagination-component="paginationComponent"*@

                    </vuetable>

                    <vuetable-pagination ref="pagination" v-on:vuetable-pagination:change-page="onChangePage"></vuetable-pagination>

                </div>
            </div>
        </div>
    </section>
</div>

<script>
    Vue.use(Vuetable);

    var tableColumns = [
        {
            name: 'id',
            sortField: 'id',
            title: "MongoID",
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '20%'
        },
        {
            name: 'seriesId',
            sortField: 'SeriesId',
            title: '系列ID',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'series',
            sortField: 'Series',
            title: '主標題名稱',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'name',
            sortField: 'Name',
            title: '副標題名稱',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'image',
            sortField: 'Image',
            title: '縮圖',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '15%'
        },
        {
            name: 'releaseTime',
            sortField: 'ReleaseTime',
            title: '上市時間',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            callback:'formatDate',
            width: '15%'
        },
        {
            name: 'updateAdmin',
            sortField: 'UpdateAdmin',
            title: '最後修改人',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: '__component:custom-action',
            title: "操作",
            titleClass: 'center aligned',
            dataClass: 'custom-action center aligned',
            width: '10%'
        },
    ];

    Vue.component('custom-action', {
        template: [
            '<div>',
                //'<a href="userdetail.aspx?id={ID}" class="btn btn-primary btn-sm">查看</a>', 
                '<a class="btn btn-primary btn-sm">編輯</a>',
                '<a class="btn btn-primary btn-sm">刪除</a>',
                //'<a :href="'userdetail.aspx?id='+props.rowData.UserId" class="btn-xs btn-default btn">查看</a>',
            '</div>'
        ].join(''),
        props: {
            rowData: {
                type: Object,
                required: true
            }
        },
        methods: {
            itemAction: function(action, data) {
                sweetAlert('custom-action: ' + action, data.name)
            },
            onClick: function(event) {
                console.log('custom-action: on-click', event.target)
            },
            onDoubleClick: function(event) {
                console.log('custom-action: on-dblclick', event.target)
            }
        }
    })

    Vue.component('my-detail-row', {
        template: [
            '<div class="detail-row ui form" v-on:click="onClick($event)">'+
                '<div class="">'+
                    '<label>系列ID：</label>'+
                    '<span>{{rowData.seriesId}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>副標題名稱：</label>'+
                    '<span>{{rowData.name}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>主標題名稱：</label>'+
                    '<span>{{rowData.series}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>上市時間：</label>'+
                    '<span>{{rowData.releaseTime}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>最後更新時間：</label>'+
                    '<span>{{rowData.updateTime}}</span>'+
                '</div>'+
                '<div class="">'+
                    '<label>最後修改人：</label>'+
                    '<span>{{rowData.updateAdmin}}</span>'+
                '</div>'+
            '</div>'
        ].join(''),
        props: {
        rowData: {
            type: Object,
            required: true
        }
        },
        methods: {
            CheckDetail (event) {
                console.log('my-detail-row: on-click')
            }
        }
    })

    Vue.config.debug = true

    var E_SERVER_ERROR = 'Error communicating with the server'

    var appMain = new Vue({
        el: '#app',
        components: {
            'vuetable-pagination': Vuetable.VuetablePagination
        },
        data: function () {
            return {
                showUpload:true,
                hideUpload:false,
                limitCountImg : 1,
                dialogImageUrl: '',
                dialogVisible: false,
                disabled: false,

                seriesId:"",
                name:"",
                series:"",
                image:"",
                releasetime:"",

                searchFor: '',
                tableLoading: true,
                fields: tableColumns,
                apiUrl: "/api/Card/GetSets",
                perPage: 10,
                moreParams: {
                    filterQuery: { Id : "" },
                    Keyword: ''
                },
                CleanerData: {
                    "Id": null,
                },
                formLabelWidth: '160px',
            }
        },
        mounted: function () {
            $("#app").show();
            //var paras = getUrlAllParams();
        },
        methods: {
            //縮圖上傳 強制取最新的
            handleChange(file, fileList) {
                this.hideUpload = fileList.length >= this.limitCountImg
                //if(fileList.length > 1){
                //    //強制取最新的
                //    fileList.splice(0,1);
                //}
                appMain.image = URL.createObjectURL(file.raw)
            },
            handleRemove(file) {
                //手動移除列表上的file
                let fileList = this.$refs.elupload.uploadFiles;
                let index = fileList.findIndex( fileItem => {
                    return fileItem.uid === file.uid
                })
                fileList.splice(index, 1)

                this.hideUpload = fileList.length >= this.limitCountImg
                this.image = null
            },
            handlePictureCardPreview(file) {
                this.dialogImageUrl = file.url;
                this.dialogVisible = true;
            },

            //新增新系列API
            addNewSet() {
                let url = "/api/Card/CreateSet";
                var data = {
                    "SeriesId" : appMain.seriesId,
                    "Name" : appMain.name,
                    "Series" : appMain.series,
                    "image" : appMain.image,
                    "ReleaseTime" : moment(appMain.releasetime).format(),  //DateTime 方法 moment(xxx).formate()
                };
                console.log("APIData", data);
                fetch(url, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                }).then((response) => {
                    if (response.status === 200) {
                        //appMain.$notify({ title: '成功', message: '更新成功', type: 'success' });
                    }
                    return response.json();
                }).then((data) => {
                    appMain.setFilter();
                }).catch((err) => {
                    console.log('錯誤:', err);
                });
            },

            
            showLoader: function () {
                this.$loading();
            },
            hideLoader: function () {
                this.$loading().close();
            },
            //Callback - 時間轉換
            formatDate: function (value) {
                if (value == null) return '';
                console.log("TIME:", value)
                return moment(value.replace("T", " ")).local().format('YYYY/MM/DD');
            },
            transform: function (data) {
                var transformed = {}
                transformed.pagination = {
                    total: data.total,
                    per_page: data.per_page,
                    current_page: data.current_page,
                    last_page: data.last_page,
                    from: data.from,
                    to: data.to
                }

                transformed.mydata = data.data;
                return transformed;
            },
            setFilter: function () {
                this.$nextTick(function () {
                    this.$refs.vuetable.refresh();
                });
            },
            resetFilter: function () {
                this.searchFor = '';
                this.setFilter();
            },
            onPaginationData: function (paginationData) {
                if (paginationData.total <= 0) {
                    this.open();
                    this.$refs.pagination.setPaginationData(paginationData);
                }
                else {
                    this.$refs.pagination.setPaginationData(paginationData);
                }
            },
            onChangePage: function (page) {
                this.$refs.vuetable.changePage(page);
            },
            startRow: function (model) {
                model.Password = "";
                this.CleanerData = model;
                this.dialogFormVisible = true;
                this.diagleType = true;
            },
            changePaginationComponent: function() {
                this.$broadcast('vuetable:load-success', this.$refs.vuetable.tablePagination)
            },
            downloadFile() {
                //this.$confirm('確定要匯出嗎？', '', { type: 'warning' })
                //    .then(() => {
                //        let url = `/CgpManager/v1/DownloadUserList`;
                //        let data = {
                //            "params": {
                //                "sort": "",
                //                "page": 0,
                //                "per_page": 0,
                //                "filterQuery": appMain.moreParams.filterQuery
                //            }
                //        };
                //        fetch(url, {
                //            headers: { 'content-type': 'application/json' },
                //            method: 'post',
                //            body: JSON.stringify(data),
                //        })
                //        .then(response => response.blob())
                //        .then(function (myBlob) {
                //            var objectURL = URL.createObjectURL(myBlob);
                                
                //            var fileLink = document.createElement('a');
                //            fileLink.href = objectURL;

                //            //用於取名
                //            var today = new Date();
                //            fileLink.download = (appMain.moreParams.filterQuery.OrderDateRange != null && appMain.moreParams.filterQuery.OrderDateRange != "") ?
                //                `${appMain.moreParams.filterQuery.OrderDateRange[0].split(' ')[0]}to${appMain.moreParams.filterQuery.OrderDateRange[1].split(' ')[0]}`
                //                : `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;

                //            fileLink.click();
                //        });
                //    }).catch(() => {

                //    });
            },
            open() {
                this.$alert('請重新檢視篩選條件', '搜尋結果為0', {
                    confirmButtonText: '確定'
                });
            },
            onCellClicked (data, field, event) {
                console.log('cellClicked: ', field.name)
                this.$refs.vuetable.toggleDetailRow(data.id)
            },
        },
    });

</script>
