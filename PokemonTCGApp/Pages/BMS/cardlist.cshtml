@page
@model PokemonTCGApp.Pages.BMS.cardlistModel
@{
    Layout = "_Layout_BMS";
}
<script src="https://rawgit.com/ratiw/vuetable-2/develop/dist/vuetable-2.js"></script>

<style>
    
</style>
<div class="content-wrapper" id="app">

    <section class="content-header">
        <h1>卡牌列表
            <small>所有已存在Mongo內的卡片列表</small>
        </h1>
    </section>

    <section class="content">
        <div class="box box-primary">

            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-fw fa-search"></i>搜尋卡牌</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>
            @*style="min-height: 1140px;*@
            <div class="box-body">
                <div class="form-horizontal">

                   @*<div class="form-group">
                        <label for="" class="col-md-2 control-label">關鍵字搜尋</label>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="" placeholder="關鍵字搜尋" v-model="" />
                        </div>
                    </div>*@

                    <div class="form-group">
                        <label for="lbl-purchaserPhone" class="col-md-2 control-label">卡片ID</label>
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="lbl-purchaserPhone" placeholder="卡片ID" v-model="moreParams.filterQuery.Id" />
                        </div>
                    </div>

                    @*搜索條件*@

                </div>
            </div>

            <div class="box-footer">
                <button type="button" class="btn btn-primary " v-on:click="setFilter">搜尋</button>
                @*<button type="button" class="btn btn-warning" v-on:click="downloadFile">下載</button>*@
                <a asp-page="/BMS/cardcreate" type="button" class="btn btn-danger" >新增</a>
            </div>
        </div>

        <div class="box box-primary">
            <div id="content" class="ui basic segment">
                <div class="ui grid">
                    <div class="ui left aligned nine wide column">
                        <div class="box-header with-border">
                            <h3 class="box-title"><i class="fa fa-fw fa-list"></i>卡牌列表<span></span></h3>
                        </div>
                    </div>

                    <div class="ui right aligned seven wide column">
                        <button class="ui basic button" id="settingsBtn">
                            <i class="setting icon"></i>
                            顯示設定
                        </button>
                    </div>
                </div>

                <div v-loading="tableLoading">
                    <vuetable ref="vuetable"
                        :api-url="apiUrl"
                        :fields="fields"
                        :per-page="perPage"
                        pagination-path="pagination"
                        data-path="mydata"
                        :append-params="moreParams"
                        class="table table-bordered"
                        http-method="post"
                        v-on:vuetable:pagination-data="onPaginationData"
                        v-on:vuetable:loading="tableLoading = true"
                        v-on:vuetable:loaded="tableLoading = false"
                        v-on:vuetable:cell-clicked="onCellClicked"
                        track-by="Id"
                        detail-row-component="my-detail-row"
                        >

                        @*:pagination-component="paginationComponent"*@
                        <template slot="actions" slot-scope="props">
                            <div class="table-button-container">
                                <a v-on:click="editSet(props.rowData)" class="btn-xs btn-default btn">編輯</a>
                                <a v-on:click="delSet(props.rowData)" class="btn-xs btn-default btn">刪除</a>
                            </div>
                        </template>

                    </vuetable>

                    <vuetable-pagination ref="pagination" v-on:vuetable-pagination:change-page="onChangePage"></vuetable-pagination>

                </div>
            </div>
        </div>
    </section>
</div>

<script>
    //$('#li_userlist').attr('class', 'active');
    Vue.use(Vuetable);

    function getUrlAllParams() {
        var url = decodeURI(window.location.href)
        var res = {}
        var url_data = _.split(url, '?').length > 1 ? _.split(url, '?')[1] : null;
        if (!url_data) return null
        var params_arr = _.split(url_data, '&')
        _.forEach(params_arr, function (item) {
            var key = _.split(item, '=')[0]
            var value = _.split(item, '=')[1]
            res[key] = value
        });
        return res
    }

    var tableColumns = [
        // 完整Columns
        //{
        //name: 'gender',
        //sortField: 'gender',
        //title: "gender",
        //titleClass: 'center aligned',
        //dataClass: 'center aligned',
        //width: '200px',
        //visible: true
        //callback:function()
        //},
        //checkBox 50px supertype
        {
            name: 'Id',
            sortField: 'Id',
            title: "MongoID",
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '20%'
        },
        {
            name: 'Imgbase64',
            sortField: 'Imgbase64',
            title: '縮圖',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            //callback:'formatImage',
            width: '15%'
        },
        {
            name: 'SetInfo.Name',
            sortField: 'SetId',
            title: '卡牌系列',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'Name',
            sortField: 'Name',
            title: '卡牌名稱',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'Rarity',
            sortField: 'Rarity',
            title: '卡牌稀有度',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: 'UpdateTime',
            sortField: 'UpdateTime',
            title: '最後修改時間',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            callback:'formatDate',
            width: '15%'
        },
        {
            name: 'CreateTime',
            sortField: 'CreateTime',
            title: '最後修改人',
            titleClass: 'center aligned',
            dataClass: 'center aligned',
            width: '10%'
        },
        {
            name: '__slot:actions',
            title: "操作",
            titleClass: 'center aligned',
            dataClass: 'custom-action center aligned',
            width: '10%'
        },
    ];

    Vue.component('my-detail-row', {
        template: [
            '<div class="detail-row ui form" v-on:click="onClick($event)">'+
                '<div class="my-1">'+
                    '<label>卡片名稱：</label>'+
                    '<span>{{rowData.Name}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>系列名稱：</label>'+
                    '<span>{{rowData.SetInfo.SeriesId}} - {{rowData.SetInfo.Series}} - {{rowData.SetInfo.Name}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>主分類：</label>'+
                    '<span>{{rowData.Supertype}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>次分類：</label>'+
                    '<span v-for="(item, index) in rowData.Subtypes">{{item}} / </span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>稀有度：</label>'+
                    '<span>{{rowData.Rarity}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>血量：</label>'+
                    '<span>{{rowData.Hp}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>屬性：</label>'+
                    '<div v-for="(item, index) in rowData.Types">'+
                        '{{item}}'+
                    '</div>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>進化自：</label>'+
                    '<span>{{rowData.EvolvesFrom}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>進化至：</label>'+
                    '<span v-for="(item, index) in rowData.EvolvesTo">'+
                        '{{item}}'+
                    '</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>訓練家卡效果：</label>'+
                    '<span>{{rowData.Rules}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>特性：</label>'+
                    '<div v-for="(item, index) in rowData.Abilities">'+
                        '{{index}} - {{item.name}} - {{item.text}} - {{item.type}}'+
                    '</div>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>招式：</label>'+
                    '<div v-for="(item, index) in rowData.Attacks">'+
                        '{{index}} - {{item.name}} - {{item.text}} - {{item.damage}}'+
                    '</div>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>弱點：</label>'+
                    '<div v-for="(item, index) in rowData.Weaknesses">'+
                        '{{index}} - {{item.type}} - {{item.value}}'+
                    '</div>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>介紹：</label>'+
                    '<span>{{rowData.FlavorText}}</span>'+
                '</div>'+
                '<div class="my-1">'+
                    '<label>最後更新時間：</label>'+
                    '<span>{{rowData.UpdateTime}}</span>'+
                '</div>'+
            '</div>'
        ].join(''),
        props: {
        rowData: {
            type: Object,
            required: true
        }
        },
        methods: {
            CheckDetail (event) {
                console.log('my-detail-row: on-click')
            }
        }
    })

    Vue.config.debug = true

    var E_SERVER_ERROR = 'Error communicating with the server'

    var appMain = new Vue({
        el: '#app',
        components: {
            'vuetable-pagination': Vuetable.VuetablePagination
        },
        data: function () {
            return {



                searchFor: '',
                tableLoading: true,
                fields: tableColumns,
                apiUrl: "/api/Card/GetCards",
                perPage: 10,
                moreParams: {
                    filterQuery: { Id : "" },
                    Keyword: ''
                },
                CleanerData: {
                    "Id": null,
                },
                formLabelWidth: '160px',
                
            }
        },
        mounted: function () {
            $("#app").show();
            //var paras = getUrlAllParams();
        },
        methods: {
            //Callback functions
            //allCap: function(value) {
            //    return value.toUpperCase()
            //},
            showLoader: function () {
                this.$loading();
            },
            hideLoader: function () {
                this.$loading().close();
            },
            formatDate: function (value) {
                if (value == null) return '';
                console.log("TIME:", value)
                return moment(value.replace("T", " ")).local().format('YYYY/MM/DD HH:mm:ss');
            },
            formatImage: function (value) {
                if (value == null) return '';
                return `<img class="setLogo" src=${value} />`
            },
            transform: function (data) {
                var transformed = {}
                transformed.pagination = {
                    total: data.total,
                    per_page: data.per_page,
                    current_page: data.current_page,
                    last_page: data.last_page,
                    from: data.from,
                    to: data.to
                }

                transformed.mydata = data.data;
                return transformed;
            },
            setFilter: function () {
                this.$nextTick(function () {
                    this.$refs.vuetable.refresh();
                });
            },
            resetFilter: function () {
                this.searchFor = '';
                this.setFilter();
            },
           
            onPaginationData: function (paginationData) {
                if (paginationData.total <= 0) {
                    this.searchZero();
                    this.$refs.pagination.setPaginationData(paginationData);
                }
                else {
                    this.$refs.pagination.setPaginationData(paginationData);
                }
            },
            onChangePage: function (page) {
                this.$refs.vuetable.changePage(page);
            },
            startRow: function (model) {
                model.Password = "";
                this.CleanerData = model;
                this.dialogFormVisible = true;
                this.diagleType = true;
            },
            changePaginationComponent: function() {
                this.$broadcast('vuetable:load-success', this.$refs.vuetable.tablePagination)
            },
            downloadFile() {
                //this.$confirm('確定要匯出嗎？', '', { type: 'warning' })
                //    .then(() => {
                //        let url = `/CgpManager/v1/DownloadUserList`;
                //        let data = {
                //            "params": {
                //                "sort": "",
                //                "page": 0,
                //                "per_page": 0,
                //                "filterQuery": appMain.moreParams.filterQuery
                //            }
                //        };
                //        fetch(url, {
                //            headers: { 'content-type': 'application/json' },
                //            method: 'post',
                //            body: JSON.stringify(data),
                //        })
                //        .then(response => response.blob())
                //        .then(function (myBlob) {
                //            var objectURL = URL.createObjectURL(myBlob);
                                
                //            var fileLink = document.createElement('a');
                //            fileLink.href = objectURL;

                //            //用於取名
                //            var today = new Date();
                //            fileLink.download = (appMain.moreParams.filterQuery.OrderDateRange != null && appMain.moreParams.filterQuery.OrderDateRange != "") ?
                //                `${appMain.moreParams.filterQuery.OrderDateRange[0].split(' ')[0]}to${appMain.moreParams.filterQuery.OrderDateRange[1].split(' ')[0]}`
                //                : `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;

                //            fileLink.click();
                //        });
                //    }).catch(() => {

                //    });
            },
            searchZero() {
                this.$alert('請重新檢視篩選條件', '搜尋結果為0', {
                    confirmButtonText: '確定'
                });
            },
            onCellClicked (data, field, event) {
                console.log('cellClicked: ', field.name)
                this.$refs.vuetable.toggleDetailRow(data.Id)
            },
           //delSet: function (data) {
           //     this.$confirm('確認是否刪除?', '注意', {
           //         confirmButtonText: '確認',
           //         cancelButtonText: '取消',
           //         type: 'warning'
           //     }).then(() => {
           //         let url = "/api/Card/DeleteSet?id=" + data.Id;
                    
           //         console.log(url)
           //         fetch(url, {
           //             method: "DELETE",
           //         }).then(function (data) {
           //             appMain.$notify({ title: '成功', message: '成功', type: 'success' });
           //             appMain.$refs.vuetable.refresh();
           //         }).catch(function (data) {

           //         });
           //     }).catch(() => {

           //     });
           // },
        },
    });
</script>
