@page
@model PokemonTCGApp.Pages.BMS.cardcreateModel
@{
    Layout = "_Layout_BMS";
}
<div class="content-wrapper" id="app">
    <section class="content" style="min-height: 1140px;">
        
        <section class="content-header">
            <h1>新增卡牌
                <small>新增至MongoDB</small>
            </h1>
        </section>

         <section class="content">
            <div class="row">
                @*左半邊*@
                <div class="col-12 col-lg-6">
                    <div class="box box-primary">
                        
                        <div class="box-header with-border">
                            <h3 class="box-title">卡牌資料</h3>
                            @*<a v-on:click="#" calss="btn-xl btn-danger btn">刪除單卡</a>*@
                        </div>

                        <div class="box-body">

                            <div class="form-group row">
                                <label for="txtCardName" class="col-sm-3 control-label">卡片名稱</label>
                                <input class="form-control" v-model="Name" placeholder="卡片名稱，上限為15個字"/>
                            </div>




                        </div>

                    </div>
                </div>
            </div>
         </section>


        <section class="content">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title"></h3>

                </div>

                






                <div class="box-footer">
                    <button type="button" class="btn btn-primary " @*v-onclick="setFilter"*@>
                        搜尋
                    </button>
                    <button type="button" class="btn btn-warning " @*v-on:click="downloadFile"*@>
                        下載
                    </button>
                </div>
            </div>
        </section>
    </section>
</div>

<script>
    var appMain = new Vue({
        el: '#app',
        data:function () {
            return {
                Id :"",
                Name:"",

                //留存參數
                AllTypesEnum:[],
                AllRaritiesEnum:[],
                AllSubtypesEnum:[],
                AllSupertypesEnum:[],

            }
        },
        mounted: function () {
            $("#app").show();
            //var paras = getUrlAllParams();


            this.GetEnums("GetAllTypesEnum").then((data) => {
                this.AllTypesEnum = data;
            });

            this.GetEnums("GetAllRaritiesEnum").then((data) => {
                this.AllRaritiesEnum = data;
            });

            this.GetEnums("GetAllSubtypesEnum").then((data) => {
                this.AllSubtypesEnum = data;
            });
              
            this.GetEnums("GetAllSupertypesEnum").then((data) => {
                this.AllSupertypesEnum = data;
            });
  
        },
        methods: {
            GetEnums(enumType) {
                let api = "/api/Card/" + enumType
                return fetch(api, {
                    method : "GET",
                })
                .then((response) => { 
                    return response.json().then((data) => {
                        console.log(data);
                        return data;
                    }).catch((err) => {
                        console.log(err);
                    }) 
                });
            },
                
            // UpsertSet() {
            //    let url = "/api/Card/UpsertSet";
            //    let formData = {
            //        'Id': appMain.id,
            //        'SeriesId':appMain.seriesId,
            //        'Name':appMain.name,
            //        'Series':appMain.series,
            //        'CreateTime':appMain.createTime != "" ? 
            //            appMain.createTime : dayjs().format(),
            //        'ReleaseTime': moment(appMain.releasetime).format(),
            //        'File':appMain.imageURL,
            //    }

            //    fetch(url, {
            //        method: "POST",
            //        headers: {
            //            'Content-Type': 'application/json',
            //        },
            //        body: JSON.stringify(formData)
            //    }).then((response) => {
            //        (response.status === 200) ? 
            //            appMain.$notify({ title: '成功', message : "新增成功", type: 'success' }) 
            //            :appMain.$notify({ title: '失敗', message : "缺少必要項目", type: 'error' });
            //        return response;
            //    }).then((data) => {
            //        appMain.cleanData();
            //        appMain.$refs.vuetable.refresh();
            //    }).catch((err) => {
            //        appMain.$notify({ title: '失敗', message : "response.status : " + response.status, type: 'error' });
            //    });
            //},
        
        }
     
     
     })

</script>